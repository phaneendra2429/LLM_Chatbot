# -*- coding: utf-8 -*-
"""langchain guardrails.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HGquXfaKxfqekwZWO_PcbmKTRahqDA5u

Download and install the LangChain
"""

#Install de LangChain and openai libraries.
!pip install -q langchain==0.1.12
!pip install -q langchain-openai

"""Importing the LangChain libraries"""

#PrompTemplate is a custom class that provides functionality to create prompts
from langchain import PromptTemplate
from langchain.chat_models import ChatOpenAI
from langchain_core.output_parsers import StrOutputParser
import torch
import os
import numpy as np

"""OpenAI key for ChatGPT3.5 as a moderator"""

from getpass import getpass
os.environ["OPENAI_API_KEY"] = getpass("OpenAI API Key: ")
assistant_llm = ChatOpenAI(model="gpt-3.5-turbo")

"""First chain (the one which gets moderated). For simplicity, we use ChatGPT 3.5 to show the moderation process of guardrails."""

# Prompt
template = """You are a helpful and compassionate assistant for answering questions on
depression using the following pieces of retrieved-context to answer the question. If you do not know the answer,
just say you do not know.
Use three sentences maximum and keep the answer concise.
Question: {question}
Context: {context}
Answer:
"""
prompt = ChatPromptTemplate.from_template(template)
#input_variables=["question", "context"],
output_parser = StrOutputParser()

print(prompt)

"""Moderator prompt"""

#The moderator prompt template
moderator_template = """
You are the moderator of a chatbot focused on addressing mental health
issues, fear of missing out, cyberbullying, and depression, and you maintain
a strict no-tolerance policy for negative comments which may harm or displease
the user. When you receive an original comment, if it's impolite or may harm the
user's mental health and comfort, your task is to transform it into a polite and
compassionate version, while trying to preserve its original meaning as much as
possible. If the comment is already polite, especially in the context of the
sensitive topics discussed, you will allow it to remain unchanged and repeat
it verbatim.
Original comment: {comment_to_moderate}
"""
# We use the PromptTemplate class to create an instance of our template that will use the prompt from above and store variables we will need to input when we make the prompt.
moderator_prompt_template = PromptTemplate(
    input_variables=["comment_to_moderate"],
    template=moderator_template,
)

moderator_llm = ChatOpenAI(model="gpt-4")

moderator_chain = moderator_prompt_template | moderator_llm | output_parser
moderator_data = moderator_chain.invoke({"comment_to_moderate": response_data})
print(moderator_data)